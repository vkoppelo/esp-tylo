esphome:
  name: esp-tylo
  platform: esp32
  board: lolin_s2_mini
  includes:
    - esp_tylo.h

# WiFi configuration    
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# Enable logging
logger:

# Enable web server for monitoring
web_server:
  port: 80

# Enable OTA updates
ota:
  - platform: esphome
    password: "xxxxxx"

# Enable Home Assistant API
api:
  encryption:
    key: "yyyyyy"

# Define UART component for RS485 communication
uart:
  id: uart_bus
  tx_pin: GPIO36
  rx_pin: GPIO35
  baud_rate: 19200
  parity: EVEN
  data_bits: 8
  stop_bits: 1

# Define GPIO pin for MAX485 DE/RE control
switch:
  - platform: gpio
    id: max485_de_re
    pin: GPIO33
    restore_mode: ALWAYS_OFF

# Template sensor to hold temperature data
sensor:
  - platform: template
    name: "ESP-Tylo Sauna Temperature"
    id: sauna_temperature
    unit_of_measurement: "Â°C"
    accuracy_decimals: 0  # Show 0 decimals
    update_interval: never

# Binary sensors for heater and light status
binary_sensor:
  - platform: template
    name: "ESP-Tylo Heater Status"
    id: heater_status
    device_class: heat  # Represents a heating device

  - platform: template
    name: "ESP-Tylo Light Status"
    id: light_status
    device_class: light  # Represents a light device

# Custom component
custom_component:
  - lambda: |-
      auto custom_sensor = new CustomSerialSensor(id(uart_bus), id(max485_de_re), id(sauna_temperature), id(heater_status), id(light_status));
      App.register_component(custom_sensor);
      return {custom_sensor};
